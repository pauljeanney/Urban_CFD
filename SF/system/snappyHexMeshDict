/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  7  
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
/*----------------- Bounding Box ------------------*/
x_min -1028.2;
y_min -1046.13;
z_min 582.744;
x_max 955.1;
y_max 1028.8;
z_max 704.746; //approximately tallest building
//K 1.0;

//ip: a minor change to work with building height, not zmax
K #calc "($z_max - $z_min)/$z_max";
F 0.3; // just a factor to reduce some things

// box refinement definition from closest to the buildings to furthest
// box 1
x1_min #calc "$x_min - $K*$z_max";
x1_max #calc "$x_max + $K*$z_max";
y1_min #calc "$y_min - $K*$z_max";
y1_max #calc "$y_max + 3*$K*$z_max";
z1_min $z_min;
z1_max #calc "$z_max + $F*$K*$z_max";

// box 2
x2_min #calc "$x_min - 2*$K*$z_max";
x2_max #calc "$x_max + 2*$K*$z_max";
y2_min #calc "$y_min - 2*$K*$z_max";
y2_max #calc "$y_max + 6*$K*$z_max";
z2_min $z_min;
z2_max #calc "$z_max + 1.2*$K*$z_max";

// Which of the steps to run
castellatedMesh true;
snap            true;
addLayers       false;


// Geometry. Definition of all surfaces. All surfaces are of class
// searchableSurface.
// Surfaces are used
// - to specify refinement for any mesh cell intersecting it
// - to specify refinement for any mesh cell inside/outside/near
// - to 'snap' the mesh boundary to the surface
geometry
{
    box1
    {
        type searchableBox;
        min ($x1_min $y1_min $z1_min);
        max ($x1_max $y1_max $z1_max);
    }

    box2
    {
        type searchableBox;
        min ($x2_min $y2_min $z2_min);
        max ($x2_max $y2_max $z2_max);
    }

    Mesh
    {
        file "Mesh.obj";
        type triSurfaceMesh;
        regions
        {
            Buildings
            {
                name Buildings;
            }
        }
    }

    Mesh_Buildings
    {
        file "Mesh_Buildings.obj";
        type triSurfaceMesh;
        regions
        {
            Buildings
            {
                name Buildings;
            }
        }
    }

    Mesh_Terrain
    {
        file "Mesh_Terrain.obj";
        type triSurfaceMesh;
        regions
        {
            Terrain
            {
                name Terrain;
            }
        }
    }

    Mesh_Vegetation
    {
        file "Mesh_Vegetation.obj";
        type triSurfaceMesh;
        regions
        {
            Vegetation
            {
                name Vegetation;
            }
        }
    }

    Mesh_Water
    {
        file "Mesh_Water.obj";
        type triSurfaceMesh;
        regions
        {
            Water
            {
                name Water;
            }
        }
    }
};


// Settings for the castellatedMesh generation.
castellatedMeshControls
{

    maxLocalCells  20000000;
    maxGlobalCells 100000000;
    minRefinementCells 0;
    maxLoadUnbalance 0.10;
    nCellsBetweenLevels 4;
    features
    (
	{
            file "Mesh_Buildings.eMesh";
            level 5;
	}
    );

    refinementSurfaces
    {
        Mesh_Buildings
        {
            level (0 0);

            regions
            {
                Buildings
                {
                    // Surface-wise min and max refinement level
                    level (5 5);                // Edges are finer

                    patchInfo
                    {
                        type wall;
                    }
                }
            }
        }

        Mesh_Terrain
        {

            level (0 0);        // This controls the level blending of the edge and overall mesh
                                // So setting it to 1 1 would refine the edge and the surrounding mesh
            regions
            {
                Terrain
                {
                    level (5 5);        // Better to have the same for both surfaces
                    patchInfo
                    {
                        type wall;
                    }
                }
             }
        }

        Mesh_Vegetation
        {

            level (0 0);        // This controls the level blending of the edge and overall mesh
                                // So setting it to 1 1 would refine the edge and the surrounding mesh
            regions
            {
                Vegetation
                {
                    level (5 5);        // Better to have the same for both surfaces
                    patchInfo
                    {
                        type wall;
                    }
                }
             }
        }

        Mesh_Water
        {

            level (0 0);        // This controls the level blending of the edge and overall mesh
                                // So setting it to 1 1 would refine the edge and the surrounding mesh
            regions
            {
                Water
                {
                    level (5 5);        // Better to have the same for both surfaces
                    patchInfo
                    {
                        type wall;
                    }
                }
             }
        }
    }

    resolveFeatureAngle 30;

    refinementRegions
    {
        box1
        {
            mode inside;
            levels ((1E15 2));
        }

        box2
        {
            mode inside;
            levels ((1E15 1));
        }

        Mesh_Buildings
        {
            mode distance;
            levels ((4.0 5) (12.0 4) (25.0 3));
        }

        Mesh_Terrain
        {
           mode distance;
           levels ((2.0 5) (12.0 4) (25.0 3));
        }

        Mesh_Vegetation
        {
           mode distance;
           levels ((2.0 5) (12.0 4) (25.0 3));
        }

        Mesh_Water
        {
           mode distance;
           levels ((2.0 5) (12.0 4) (25.0 3));
        }

    }

    locationInMesh (0 0 700);
    allowFreeStandingZoneFaces true;
}

// Settings for the snapping.
snapControls
{
    nSmoothPatch 2;
    tolerance 2.0;
    nSolveIter 50;
    nRelaxIter 5;
    nFeatureSnapIter 15;
    implicitFeatureSnap false;
    explicitFeatureSnap true;
    multiRegionFeatureSnap false;
}

// Settings for the layer addition.
addLayersControls
{
    relativeSizes true;
    expansionRatio 1.2;
    firstLayerThickness 0.4;
    minThickness 0.4;
    layers
    {
        Buildings
        {
            nSurfaceLayers 3;

        }
    }

    nGrow 0;
    featureAngle 130;
    maxFaceThicknessRatio 0.5;
    nSmoothSurfaceNormals 1;
    nSmoothThickness 10;
    minMedialAxisAngle 90;
    maxThicknessToMedialRatio 0.3;
    nSmoothNormals 3;
    slipFeatureAngle 30;
    nRelaxIter 5;
    nBufferCellsNoExtrude 0;
    nLayerIter 50;
    nRelaxedIter 20;
}


// Generic mesh quality settings. At any undoable phase these determine
// where to undo.
meshQualityControls
{
    maxNonOrtho 70;
    maxBoundarySkewness 6;
    maxInternalSkewness 8;
    maxConcave 80;
    minVol 1e-13;
    minTetQuality 1e-30;
    minArea -1;
    minTwist 0.05;
    minDeterminant 0.001;
    minFaceWeight 0.05;
    minVolRatio 0.01;
    minTriangleTwist -1;
    // minVolCollapseRatio 0.5;
    nSmoothScale 4;
    errorReduction 0.75;
    relaxed
    {
        maxNonOrtho 75;
    }
}


// Advanced
mergeTolerance 1e-6;


// ************************************************************************* //

